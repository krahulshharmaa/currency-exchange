name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # Set Java version to 17
          distribution: 'adoptopenjdk'  # Use the AdoptOpenJDK distribution

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip

      # Step 4: Install Android SDK
      - name: Install Android SDK
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip sdk-tools.zip -d $HOME/android-sdk/cmdline-tools
          rm sdk-tools.zip
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk --install "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      # Step 5: Set up Gradle wrapper permissions
      - name: Make gradlew executable
        run: chmod +x gradlew

      # Step 6: Restore Gradle cache
      - name: Restore Gradle cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-cache-${{ checksum('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-cache-

      # Step 7: Build APK
      - name: Build Release APK
        run: ./gradlew assembleRelease

      # Step 8: Store APK artifacts
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: app/build/outputs/apk/release/

